server {
	listen 443 ssl;
	ssl_certificate "/etc/nginx/ssl/server.crt";
	ssl_certificate_key "/etc/nginx/ssl/server.key";

	##
	#   Configure for load balancer
	##

    set_real_ip_from xxx.xxx.xxx.xxx/xx;
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;

	##
	#   Ensure requests on HTTP get redirected to HTTPS
	#   Have to inspect forwarded protocol as all internal
	#   ELB traffic is HTTPS
	##

	if ($http_x_forwarded_proto = 'http') {
         return 301 https://$host$request_uri;
    }

	##
	#   Don't serve, don't care
	##

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    error_page 497  https://$host:$server_port$request_uri;

	##
	#   Configure an endpoint of internal ECS and ELB healthchecks
	#   Only allow internal endpoints to access and redirect logs
	##

    location /healthcheck {

        # Only allow load balancer and local hosts
        allow xxx.xxx.xxx.xxx/xx;
        allow 127.0.0.1;
        deny all;

        # Proxy to the app's healthcheck endpoint
		proxy_pass   http://localhost:8000/healthcheck;

        # Redirect logs to keep actual logs clean
        access_log /var/log/nginx/healthcheck.log;
    }

	location /static {
        alias /app/static/;

        # Disable logging for static files
        access_log off;
    }

	location / {
		# checks for static file, if not found proxy to app
		try_files $uri @proxy_to_app;
	}

	location @proxy_to_app {
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_redirect off;

		proxy_pass   http://localhost:8000;
	}

	client_max_body_size 4G;
	server_name _;
}
